import { t } from '@lingui/macro';
import SPELLS from 'common/SPELLS';
import Analyzer, { SELECTED_PLAYER, Options } from 'parser/core/Analyzer';
import Events, { CastEvent, DamageEvent, HealEvent } from 'parser/core/Events';

const OVERHEAL_THRESHOLD = 0.5;

class MaraadsOverheal extends Analyzer {
  // have to track over multiple events when player has Maraad's legendary
  // in these cases we'll have a little inaccuracy when DoT is refreshed, but should be close enough
  /** tracks damage taken from LotM since last heal */
  overheal = 0;
  castsOverhealed = 0;

  constructor(options: Options) {
    super(options);
    this.addEventListener(Events.cast.spell(SPELLS.WORD_OF_GLORY).by(SELECTED_PLAYER), 
    this.cast
    );
    this.addEventListener(
      Events.heal.spell(SPELLS.LIGHT_OF_THE_MARTYR).by(SELECTED_PLAYER), 
      this.heal
    );
  }
  private heal(event: HealEvent) {
    const totalHeal = event.amount + (event.overheal || 0) + (event.absorbed || 0);

    if (event.hitType !== HIT_TYPES.CRIT && event.amount / totalHeal < OVERHEAL_THRESHOLD) {
      this.castsOverhealed += 1;
    }
  }
  get overhealSuggestion() {
    return {
      actual: this.castsOverhealed / this.totalCasts,
      isGreaterThan: {
        minor: 0.1,
        average: 0.15,
        major: 0.2,
      },
      style: ThresholdStyle.PERCENTAGE,
    };
  }
  suggestions(when: When) {
    when(this.overhealSuggestion).addSuggestion((suggest, actual, recommended) =>
      suggest(
        <>
          Try to avoid casting <SpellLink id={SPELLS.LIGHT_OF_THE_MARTYR.id} /> when a large portion of it
          would overheal. If you are finding that this is happening very frequently, consider using a different legendary.
        </>,
      )
        .icon(SPELLS.MARAADS_DYING_BREATH.icon)
        .actual(`${formatPercentage(actual)}% of your casts overhealed by more than 50%`)
        .recommended(`< ${formatPercentage(recommended)}% is recommended`),
    );
  }
}

export default MaraadsOverheal;
